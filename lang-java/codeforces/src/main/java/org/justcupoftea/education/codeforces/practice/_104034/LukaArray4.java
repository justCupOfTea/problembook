package org.justcupoftea.education.codeforces.practice._104034;

import java.util.Scanner;

/**
 * У Луки есть массив из n целых чисел a1,a2,…,an.
 * К каждому элементу массива можно произвольное количество раз применять каждую из следующих магических операций:
 * <p>
 * 1. Выбрать некоторый элемент массива aiи заменить его на число ⌊ai2⌋ (данная запись обозначает число ai2, округленное вниз).
 * Для выполнения данной операции требуется k единиц энергии.
 * 2. Выбрать некоторый элемент массива ai и заменить его на число ai−1. Для выполнения данной операции требуется одна единица энергии.
 * <p>
 * Ваша задача — определить, какое минимальное количество энергии необходимо, чтобы после выполнения магических операций
 * все элементы массива принимли значение, равное единице (то есть, a1=a2=…=an=1).
 * <p>
 * Входные данные
 * Первая строка содержит одно целое число n (1≤n≤5⋅104) — количество элементов массива.
 * <p>
 * Вторая строка содержит одно целое число k  * (1≤k≤105 ) — количество энергии, необходимое для выполнения операции первого типа.
 * <p>
 * Каждая из следующих n  * строк содержит одно целое число ai (1≤ai≤109) — элементы массива.
 * <p>
 * Обратите внимание, что ответ может быть достаточно большими, поэтому следует использовать 64-битный тип данных,
 * например long long в C/C++, long в Java, int64 в Pascal.
 * <p>
 * Выходные данные
 * Выведите одно целое число — минимальное количество энергии, необходимое для требуемого преобразования массива.
 * <p>
 * Система оценки
 * Решения, правильно работающие только для случаев, когда k=1, будут оцениваться в 25
 * баллов.
 * <p>
 * Решения, правильно работающие только для случаев, когда все ai не превосходят 105, будут оцениваться в 50 баллов.
 *
 * * @see <a href="https://codeforces.com/gym/104034/problem/4">Лука и массив</a>
 */
public class LukaArray4 {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            long l = scanner.nextLong();
            long k = scanner.nextLong();
            long points = fun(l, k, scanner);
            System.out.println(points);
        }
    }

    public static long fun(long l, long k, Scanner scanner) {
        if (!(l >= 1 && l <= 50_000)) {
            throw new IllegalArgumentException("Error array length");
        }
        if (!(k >= 1 && k <= 100_000)) {
            throw new IllegalArgumentException("Error k");
        }
        long points = 0;
        for (int i = 0; i < l; i++) {
            long el = scanner.nextLong();
            if (!(el >= 1 && el <= 1000_000_000)) {
                throw new IllegalArgumentException("Error el");
            }
            while (el != 1) {
                long tmp = el / 2;
                long p = el - tmp;
                if (p < k) {
                    points = points + p;
                } else {
                    points = points + k;
                }
                el = tmp;
            }
        }
        return points;
    }

}
